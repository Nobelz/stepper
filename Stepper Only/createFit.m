function [fitresult, gof] = createFit(time, kernel)
% createFit.m
% Creates fit according to equation described in Fox & Apteker, 2014.
%
% Inputs:
%   - time: the time data to fit
%   - kernel: the kernel data to fit
%
% Author: Nobel Zhou (and auto-generated by MATLAB)
% Date: 21 February 2023
% Version: 1.0
%
% VERSION CHANGELOG:
% - v1.0 (2/21/2023): Initial commit

%% Fit
[xData, yData] = prepareCurveData(time, kernel);

% Inputs:
% x: time
% y: kernel

% Parameters:
% A: AAC
% t: time onset
% d: tau decay
% r: tau rise
% s: tau step
% T: time DC
% D: ADC
% c: tau DC

% Set up fittype and options.
ft = fittype('A*((exp(((t-x)/r)))-(exp(((t-x)/d))))/(1+exp(((t-x)/s)))+D*(1-exp(((T-x)/c)))/(1+exp(((t-x)/s)))', 'independent', 'x', 'dependent', 'y' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.Lower = [0 -Inf 0 0 0 0 0.01 0];
opts.Upper = [Inf 0 2 2 2 2 0.01 2];
opts.MaxIter = 1000;
opts.StartPoint = [1 -1 0.01 0.01 0.01 0.01 0.01 0.01];

% Fit model to data
[fitresult, gof] = fit( xData, yData, ft, opts );

% Removed: auto-generated from MATLAB, plotting will occur elsewhere
% % Plot fit with data.
% figure('Name', 'AllOnIntact');
% h = plot( fitresult, xData, yData );
% legend( h, 'kernel vs. time', 'AllOnIntact', 'Location', 'NorthEast', 'Interpreter', 'none' );
% % Label axes
% xlabel( 'time', 'Interpreter', 'none' );
% ylabel( 'kernel', 'Interpreter', 'none' );
% grid on


